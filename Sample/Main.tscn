[gd_scene load_steps=18 format=3 uid="uid://gcoi8ld0uvkl"]

[ext_resource type="FontFile" path="res://fonts/roboto-16r.tres" id="1_j7moy"]
[ext_resource type="PackedScene" path="res://scenes/AchievementsView/AchievementsView.tscn" id="2"]
[ext_resource type="Script" path="res://Main.gd" id="3"]
[ext_resource type="Script" path="res://scripts/ViewManager.gd" id="3_j157n"]
[ext_resource type="PackedScene" path="res://scenes/LogsView/LogsView.tscn" id="4"]
[ext_resource type="PackedScene" path="res://scenes/LoginView/LoginView.tscn" id="5"]
[ext_resource type="PackedScene" path="res://scenes/UI/PrimaryButton.tscn" id="6"]
[ext_resource type="PackedScene" path="res://scenes/CustomInvitesView/CustomInvitesView.tscn" id="9"]
[ext_resource type="PackedScene" path="res://scenes/StatsView/StatsView.tscn" id="10"]
[ext_resource type="PackedScene" path="res://scenes/LeaderboardsView/LeaderboardsView.tscn" id="11"]
[ext_resource type="PackedScene" path="res://scenes/FriendsView/FriendsView.tscn" id="12"]
[ext_resource type="PackedScene" path="res://scenes/UIView/UIView.tscn" id="13"]
[ext_resource type="PackedScene" path="res://scenes/MetricsView/MetricsView.tscn" id="14"]
[ext_resource type="Script" path="res://scenes/NotificationsView/NotificationsView.gd" id="14_v0jrb"]

[sub_resource type="Theme" id="4"]
default_font = ExtResource("1_j7moy")

[sub_resource type="GDScript" id="GDScript_yekk2"]
script/source = "@tool
extends Container

class_name HFlowContainer, \"./h_flow_container.svg\"

# The flow container will fit as many children in a row as it can
# using their minimum size, and will then continue on the next row.
# Does not use SIZE_EXPAND flags of children.

# TODO: half-respect vertical SIZE_EXPAND flags by expanding the child to match
#       the tallest child in that row?
# TODO: Respect scaled children?
# TODO: Can we find a way to intuitively use a child's horizontal SIZE_EXPAND
#       flag?

@export var horizontal_margin: float = 5
@export var vertical_margin: float = 5

# Used to make our parent re-evaluate our size when we have to create more or
# less rows to fit in all the children.
var _reported_height_at_last_minimum_size_call: float = 0


func _init() -> void:
	size_flags_horizontal = SIZE_EXPAND | SIZE_FILL


func _ready():
	pass


func _get_minimum_size() -> Vector2:
	var max_child_width: float = 0

	for child in get_children():
		if not child.has_method(\"get_combined_minimum_size\"):
			break

		var requested_size: Vector2 = child.get_combined_minimum_size()
		if requested_size.x > max_child_width:
			max_child_width = requested_size.x

	var height := _calculate_layout(false)
	_reported_height_at_last_minimum_size_call = height

	return Vector2(max_child_width, height)


func _notification(what):
	if (what==NOTIFICATION_SORT_CHILDREN):
		var height = _calculate_layout(true)

		if height != _reported_height_at_last_minimum_size_call:
			_make_parent_reevaluate_our_size()

# If apply is true, the children will actually be moved to the calculated
# locations.
# Returns the resulting height.
func _calculate_layout(apply: bool) -> float:
	var child_position: Vector2 = Vector2(0, 0)
	var row_height: float = 0
	var container_width: float = size.x
	var num_children_in_current_row: float = 0

	for child in get_children():
		if not child.has_method(\"get_combined_minimum_size\"):
			continue
		if not child.visible:
			continue

		var child_min_size: Vector2 = child.get_combined_minimum_size()

		if num_children_in_current_row > 0:
			child_position.x += horizontal_margin

		if child_position.x + child_min_size.x > container_width:
			# Go to the next row.
			child_position = Vector2(0, child_position.y + row_height + vertical_margin)
			row_height = 0
			num_children_in_current_row = 0

		if apply:
			fit_child_in_rect(child, Rect2(child_position, child_min_size))

		if child_min_size.y > row_height:
			row_height = child_min_size.y

		child_position.x += child_min_size.x
		num_children_in_current_row += 1

	return child_position.y + row_height


func _make_parent_reevaluate_our_size():
	# Hacky solution. Once there is a function for this, use it.
	custom_minimum_size = Vector2(0, 20000)
	custom_minimum_size = Vector2(0, 0)
"

[sub_resource type="StyleBoxEmpty" id="5"]

[node name="Main" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme = SubResource("4")
script = ExtResource("3")
__meta__ = {
"_edit_use_anchors_": false
}
_views_path = NodePath("MC/ViewManager")

[node name="ColorRect" type="ColorRect" parent="."]
layout_mode = 0
anchor_right = 1.0
anchor_bottom = 1.0
color = Color(0.121569, 0.121569, 0.121569, 1)

[node name="MC" type="MarginContainer" parent="."]
layout_mode = 0
anchor_right = 1.0
anchor_bottom = 1.0
theme_override_constants/margin_left = 8
theme_override_constants/margin_top = 8
theme_override_constants/margin_right = 8
theme_override_constants/margin_bottom = 8

[node name="ViewManager" type="VBoxContainer" parent="MC"]
layout_mode = 2
script = ExtResource("3_j157n")

[node name="HB" type="HFlowContainer" parent="MC/ViewManager"]
layout_mode = 2
size_flags_horizontal = 3
script = SubResource("GDScript_yekk2")
horizontal_margin = 8.0
vertical_margin = 12.0

[node name="AuthBtn" parent="MC/ViewManager/HB" instance=ExtResource("6")]
layout_mode = 2
text = "Auth"

[node name="AchievementsBtn" parent="MC/ViewManager/HB" instance=ExtResource("6")]
layout_mode = 2
text = "Achievements"

[node name="CustomInvitesBtn" parent="MC/ViewManager/HB" instance=ExtResource("6")]
layout_mode = 2
text = "Custom Invites"

[node name="StatsBtn" parent="MC/ViewManager/HB" instance=ExtResource("6")]
layout_mode = 2
text = "Stats"

[node name="LeaderboardsBtn" parent="MC/ViewManager/HB" instance=ExtResource("6")]
layout_mode = 2
text = "Leaderboards"

[node name="FriendsBtn" parent="MC/ViewManager/HB" instance=ExtResource("6")]
layout_mode = 2
text = "Friends"

[node name="UIBtn" parent="MC/ViewManager/HB" instance=ExtResource("6")]
layout_mode = 2
text = "UI"

[node name="MetricsBtn" parent="MC/ViewManager/HB" instance=ExtResource("6")]
layout_mode = 2
text = "Metrics"

[node name="LobbiesBtn" parent="MC/ViewManager/HB" instance=ExtResource("6")]
layout_mode = 2
text = "Lobbies"

[node name="P2PBtn" parent="MC/ViewManager/HB" instance=ExtResource("6")]
layout_mode = 2
text = "P2P"

[node name="PlayerDataBtn" parent="MC/ViewManager/HB" instance=ExtResource("6")]
layout_mode = 2
text = "Player Data"

[node name="ReportBtn" parent="MC/ViewManager/HB" instance=ExtResource("6")]
layout_mode = 2
text = "Reports"

[node name="TitleStorageBtn" parent="MC/ViewManager/HB" instance=ExtResource("6")]
layout_mode = 2
text = "Title Storage"

[node name="VSC" type="VSplitContainer" parent="MC/ViewManager"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_constants/autohide = 0
split_offset = 120

[node name="VB" type="VBoxContainer" parent="MC/ViewManager/VSC"]
layout_mode = 2

[node name="LoginView" parent="MC/ViewManager/VSC/VB" instance=ExtResource("5")]
layout_mode = 2

[node name="AchievementsView" parent="MC/ViewManager/VSC/VB" instance=ExtResource("2")]
visible = false
layout_mode = 2

[node name="CustomInvitesView" parent="MC/ViewManager/VSC/VB" instance=ExtResource("9")]
visible = false
layout_mode = 2

[node name="StatsView" parent="MC/ViewManager/VSC/VB" instance=ExtResource("10")]
visible = false
layout_mode = 2

[node name="LeaderboardsView" parent="MC/ViewManager/VSC/VB" instance=ExtResource("11")]
visible = false
layout_mode = 2

[node name="FriendsView" parent="MC/ViewManager/VSC/VB" instance=ExtResource("12")]
visible = false
layout_mode = 2

[node name="UIView" parent="MC/ViewManager/VSC/VB" instance=ExtResource("13")]
visible = false
layout_mode = 2

[node name="MetricsView" parent="MC/ViewManager/VSC/VB" instance=ExtResource("14")]
visible = false
layout_mode = 2

[node name="NotificationsLayer" type="CanvasLayer" parent="MC/ViewManager/VSC/VB"]

[node name="NotificationsView" type="MarginContainer" parent="MC/ViewManager/VSC/VB/NotificationsLayer"]
offset_top = 270.0
offset_right = 366.0
offset_bottom = 600.0
mouse_filter = 2
script = ExtResource("14_v0jrb")

[node name="SC" type="ScrollContainer" parent="MC/ViewManager/VSC/VB/NotificationsLayer/NotificationsView"]
custom_minimum_size = Vector2(350, 0)
layout_mode = 2
mouse_filter = 2

[node name="PC" type="PanelContainer" parent="MC/ViewManager/VSC/VB/NotificationsLayer/NotificationsView/SC"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 10
mouse_filter = 2
theme_override_styles/panel = SubResource("5")

[node name="MC" type="MarginContainer" parent="MC/ViewManager/VSC/VB/NotificationsLayer/NotificationsView/SC/PC"]
layout_mode = 2
mouse_filter = 2
theme_override_constants/margin_left = 4
theme_override_constants/margin_top = 8
theme_override_constants/margin_right = 4
theme_override_constants/margin_bottom = 8

[node name="VB" type="VBoxContainer" parent="MC/ViewManager/VSC/VB/NotificationsLayer/NotificationsView/SC/PC/MC"]
layout_mode = 2
mouse_filter = 2
theme_override_constants/separation = 8

[node name="LogsView" parent="MC/ViewManager/VSC" instance=ExtResource("4")]
layout_mode = 2
